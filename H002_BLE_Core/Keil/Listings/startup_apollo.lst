


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ***********************
    2 00000000         ;
    3 00000000         ;! @file startup_keil.s
    4 00000000         ;!
    5 00000000         ;! @brief Definitions for Apollo2 interrupt handlers, th
                       e vector table, and the stack.
    6 00000000         ;
    7 00000000         ;*******************************************************
                       ***********************
    8 00000000         
    9 00000000         ;*******************************************************
                       ***********************
   10 00000000         ;
   11 00000000         ; Copyright (c) 2018, Ambiq Micro
   12 00000000         ; All rights reserved.
   13 00000000         ; 
   14 00000000         ; Redistribution and use in source and binary forms, wit
                       h or without
   15 00000000         ; modification, are permitted provided that the followin
                       g conditions are met:
   16 00000000         ; 
   17 00000000         ; 1. Redistributions of source code must retain the abov
                       e copyright notice,
   18 00000000         ; this list of conditions and the following disclaimer.
   19 00000000         ; 
   20 00000000         ; 2. Redistributions in binary form must reproduce the a
                       bove copyright
   21 00000000         ; notice, this list of conditions and the following disc
                       laimer in the
   22 00000000         ; documentation and/or other materials provided with the
                        distribution.
   23 00000000         ; 
   24 00000000         ; 3. Neither the name of the copyright holder nor the na
                       mes of its
   25 00000000         ; contributors may be used to endorse or promote product
                       s derived from this
   26 00000000         ; software without specific prior written permission.
   27 00000000         ; 
   28 00000000         ; Third party software included in this distribution is 
                       subject to the
   29 00000000         ; additional license terms as defined in the /docs/licen
                       ses directory.
   30 00000000         ; 
   31 00000000         ; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
                        CONTRIBUTORS "AS IS"
   32 00000000         ; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT 
                       NOT LIMITED TO, THE
   33 00000000         ; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
                       A PARTICULAR PURPOSE
   34 00000000         ; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER
                        OR CONTRIBUTORS BE
   35 00000000         ; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
                       EXEMPLARY, OR
   36 00000000         ; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
                       PROCUREMENT OF
   37 00000000         ; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PR
                       OFITS; OR BUSINESS
   38 00000000         ; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIAB



ARM Macro Assembler    Page 2 


                       ILITY, WHETHER IN
   39 00000000         ; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGE
                       NCE OR OTHERWISE)
   40 00000000         ; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EV
                       EN IF ADVISED OF THE
   41 00000000         ; POSSIBILITY OF SUCH DAMAGE.
   42 00000000         ;
   43 00000000         ; This is part of revision v1.2.12-736-gdf97e703f of the
                        AmbiqSuite Development Package.
   44 00000000         ;
   45 00000000         ;*******************************************************
                       ***********************
   46 00000000         
   47 00000000         ;*******************************************************
                       ***********************
   48 00000000         ; Include the file that will determine whether to use CM
                       SIS-style or
   49 00000000         ; AM_REG-style vectors.
   50 00000000         ;*******************************************************
                       ***********************
   51 00000000                 GET              ../PlatformSource/mcu/am_mcu_cm
sis.s
    1 00000000         ;*******************************************************
                       ***********************
    2 00000000         ;
    3 00000000         ;! @file am_mcu_cmsis.s
    4 00000000         ;!
    5 00000000         ;! @brief Keil/ARM assembly definition for CMSIS.
    6 00000000         ;!
    7 00000000         ;! IMPORTANT: This EQU must be set to the same value as 
                       am_mcu_cmsis.h!
    8 00000000         ;!
    9 00000000         ;
   10 00000000         ;*******************************************************
                       ***********************
   11 00000000         
   12 00000000         ;*******************************************************
                       ***********************
   13 00000000         ;
   14 00000000         ; Copyright (c) 2018, Ambiq Micro
   15 00000000         ; All rights reserved.
   16 00000000         ; 
   17 00000000         ; Redistribution and use in source and binary forms, wit
                       h or without
   18 00000000         ; modification, are permitted provided that the followin
                       g conditions are met:
   19 00000000         ; 
   20 00000000         ; 1. Redistributions of source code must retain the abov
                       e copyright notice,
   21 00000000         ; this list of conditions and the following disclaimer.
   22 00000000         ; 
   23 00000000         ; 2. Redistributions in binary form must reproduce the a
                       bove copyright
   24 00000000         ; notice, this list of conditions and the following disc
                       laimer in the
   25 00000000         ; documentation and/or other materials provided with the
                        distribution.
   26 00000000         ; 
   27 00000000         ; 3. Neither the name of the copyright holder nor the na



ARM Macro Assembler    Page 3 


                       mes of its
   28 00000000         ; contributors may be used to endorse or promote product
                       s derived from this
   29 00000000         ; software without specific prior written permission.
   30 00000000         ; 
   31 00000000         ; Third party software included in this distribution is 
                       subject to the
   32 00000000         ; additional license terms as defined in the /docs/licen
                       ses directory.
   33 00000000         ; 
   34 00000000         ; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
                        CONTRIBUTORS "AS IS"
   35 00000000         ; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT 
                       NOT LIMITED TO, THE
   36 00000000         ; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
                       A PARTICULAR PURPOSE
   37 00000000         ; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER
                        OR CONTRIBUTORS BE
   38 00000000         ; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
                       EXEMPLARY, OR
   39 00000000         ; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
                       PROCUREMENT OF
   40 00000000         ; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PR
                       OFITS; OR BUSINESS
   41 00000000         ; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIAB
                       ILITY, WHETHER IN
   42 00000000         ; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGE
                       NCE OR OTHERWISE)
   43 00000000         ; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EV
                       EN IF ADVISED OF THE
   44 00000000         ; POSSIBILITY OF SUCH DAMAGE.
   45 00000000         ;
   46 00000000         ; This is part of revision v1.2.12-837-gb0e09d712 of the
                        AmbiqSuite Development Package.
   47 00000000         ;
   48 00000000         ;*******************************************************
                       ***********************
   49 00000000         
   50 00000000         ;*******************************************************
                       ***********************
   51 00000000         ;
   52 00000000         ; Set AM_CMSIS_REGS to 1 to use CMSIS-style register and
                        vector access.
   53 00000000         ; Set AM_CMSIS_REGS to 0 to use AM_REG-style register an
                       d vector access.
   54 00000000         ;
   55 00000000         ; IMPORTANT: This value must be the same as the macro in
                        am_mcu_cmsis.h!
   56 00000000         ;
   57 00000000         ;*******************************************************
                       *****************
   58 00000000 00000001 
                       AM_CMSIS_REGS
                               EQU              1
   59 00000000         
   60 00000000                 END
   52 00000000         
   53 00000000         ;*******************************************************
                       ***********************



ARM Macro Assembler    Page 4 


   54 00000000         ;
   55 00000000         ; <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   56 00000000         ;*******************************************************
                       *****************
   57 00000000 00003000 
                       Stack   EQU              0x00003000
   58 00000000         
   59 00000000         ;*******************************************************
                       ***********************
   60 00000000         ;
   61 00000000         ; <o> Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   62 00000000         ;
   63 00000000         ;*******************************************************
                       ***********************
   64 00000000 00000000 
                       Heap    EQU              0x00000000
   65 00000000         
   66 00000000         ;*******************************************************
                       ***********************
   67 00000000         ;
   68 00000000         ; Allocate space for the stack.
   69 00000000         ;
   70 00000000         ;*******************************************************
                       ***********************
   71 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   72 00000000         StackMem
   73 00000000                 SPACE            Stack
   74 00003000         __initial_sp
   75 00003000         
   76 00003000         ;*******************************************************
                       ***********************
   77 00003000         ;
   78 00003000         ; Allocate space for the heap.
   79 00003000         ;
   80 00003000         ;*******************************************************
                       ***********************
   81 00003000                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   82 00000000         __heap_base
   83 00000000         HeapMem
   84 00000000                 SPACE            Heap
   85 00000000         __heap_limit
   86 00000000         
   87 00000000         ;*******************************************************
                       ***********************
   88 00000000         ;
   89 00000000         ; Indicate that the code in this file preserves 8-byte a
                       lignment of the stack.
   90 00000000         ;
   91 00000000         ;*******************************************************
                       ***********************
   92 00000000                 PRESERVE8
   93 00000000         
   94 00000000         ;*******************************************************
                       ***********************
   95 00000000         ;
   96 00000000         ; Place code into the reset code section.
   97 00000000         ;



ARM Macro Assembler    Page 5 


   98 00000000         ;*******************************************************
                       ***********************
   99 00000000                 AREA             RESET, CODE, READONLY
  100 00000000                 THUMB
  101 00000000         
  102 00000000         ;*******************************************************
                       ***********************
  103 00000000         ;
  104 00000000         ; The vector table.
  105 00000000         ;
  106 00000000         ;*******************************************************
                       ***********************
  107 00000000         ;
  108 00000000         ; Note: Aliasing and weakly exporting am_mpufault_isr, a
                       m_busfault_isr, and
  109 00000000         ; am_usagefault_isr does not work if am_fault_isr is def
                       ined externally.
  110 00000000         ; Therefore, we'll explicitly use am_fault_isr in the ta
                       ble for those vectors.
  111 00000000         ;
  112 00000000                 IF               AM_CMSIS_REGS == 1
  113 00000000                 EXPORT           __Vectors
  114 00000000         __Vectors
  115 00000000 00003000        DCD              StackMem + Stack ; Top of Stack
                                                            
  116 00000004 00000000        DCD              Reset_Handler ; Reset Handler
  117 00000008 00000000        DCD              NMI_Handler ; NMI Handler
  118 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
  119 00000010 00000000        DCD              MemManage_Handler ; The MPU fau
                                                            lt handler
  120 00000014 00000000        DCD              BusFault_Handler ; The bus faul
                                                            t handler
  121 00000018 00000000        DCD              UsageFault_Handler ; The usage 
                                                            fault handler
  122 0000001C 00000000        DCD              SecureFault_Handler ; Secure fa
                                                            ult handler
  123 00000020 00000000        DCD              0           ; Reserved
  124 00000024 00000000        DCD              0           ; Reserved
  125 00000028 00000000        DCD              0           ; Reserved
  126 0000002C 00000000        DCD              SVC_Handler ; SVCall handler
  127 00000030 00000000        DCD              DebugMon_Handler ; Debug monito
                                                            r handler
  128 00000034 00000000        DCD              0           ; Reserved
  129 00000038 00000000        DCD              PendSV_Handler ; The PendSV han
                                                            dler
  130 0000003C 00000000        DCD              SysTick_Handler ; The SysTick h
                                                            andler
  131 00000040         
  132 00000040         ;
  133 00000040         ; Peripheral Interrupts
  134 00000040         ;
  135 00000040 00000000        DCD              am_brownout_isr ;  0: Reserved
  136 00000044 00000000        DCD              am_watchdog_isr ;  1: Reserved
  137 00000048 00000000        DCD              am_rtc_isr  ;  2: RTC
  138 0000004C 00000000        DCD              am_vcomp_isr ;  3: Voltage Comp
                                                            arator
  139 00000050 00000000        DCD              am_ioslave_ios_isr ;  4: I/O Sl
                                                            ave general



ARM Macro Assembler    Page 6 


  140 00000054 00000000        DCD              am_ioslave_acc_isr ;  5: I/O Sl
                                                            ave access
  141 00000058 00000000        DCD              am_iomaster0_isr 
                                                            ;  6: I/O Master 0
  142 0000005C 00000000        DCD              am_iomaster1_isr 
                                                            ;  7: I/O Master 1
  143 00000060 00000000        DCD              am_iomaster2_isr 
                                                            ;  8: I/O Master 2
  144 00000064 00000000        DCD              am_iomaster3_isr 
                                                            ;  9: I/O Master 3
  145 00000068 00000000        DCD              am_iomaster4_isr 
                                                            ; 10: I/O Master 4
  146 0000006C 00000000        DCD              am_iomaster5_isr 
                                                            ; 11: I/O Master 5
  147 00000070 00000000        DCD              am_ble_isr  ; 12: BLEIF
  148 00000074 00000000        DCD              am_gpio_isr ; 13: GPIO
  149 00000078 00000000        DCD              am_ctimer_isr ; 14: CTIMER
  150 0000007C 00000000        DCD              am_uart_isr ; 15: UART0
  151 00000080 00000000        DCD              am_uart1_isr ; 16: UART1
  152 00000084 00000000        DCD              am_scard_isr ; 17: SCARD
  153 00000088 00000000        DCD              am_adc_isr  ; 18: ADC
  154 0000008C 00000000        DCD              am_pdm_isr  ; 19: PDM
  155 00000090 00000000        DCD              am_mspi_isr ; 20: MSPI
  156 00000094 00000000        DCD              am_default_isr ; 21: Reserved
  157 00000098 00000000        DCD              am_stimer_isr 
                                                            ; 22: SYSTEM TIMER
  158 0000009C 00000000        DCD              am_stimer_cmpr0_isr ; 23: SYSTE
                                                            M TIMER COMPARE0
  159 000000A0 00000000        DCD              am_stimer_cmpr1_isr ; 24: SYSTE
                                                            M TIMER COMPARE1
  160 000000A4 00000000        DCD              am_stimer_cmpr2_isr ; 25: SYSTE
                                                            M TIMER COMPARE2
  161 000000A8 00000000        DCD              am_stimer_cmpr3_isr ; 26: SYSTE
                                                            M TIMER COMPARE3
  162 000000AC 00000000        DCD              am_stimer_cmpr4_isr ; 27: SYSTE
                                                            M TIMER COMPARE4
  163 000000B0 00000000        DCD              am_stimer_cmpr5_isr ; 28: SYSTE
                                                            M TIMER COMPARE5
  164 000000B4 00000000        DCD              am_stimer_cmpr6_isr ; 29: SYSTE
                                                            M TIMER COMPARE6
  165 000000B8 00000000        DCD              am_stimer_cmpr7_isr ; 30: SYSTE
                                                            M TIMER COMPARE7
  166 000000BC 00000000        DCD              am_clkgen_isr ; 31: CLKGEN
  167 000000C0 00000000        DCD              am_software0_isr 
                                                            ; 32: SOFTWARE0
  168 000000C4 00000000        DCD              am_software1_isr 
                                                            ; 33: SOFTWARE1
  169 000000C8 00000000        DCD              am_software2_isr 
                                                            ; 34: SOFTWARE2
  170 000000CC 00000000        DCD              am_software3_isr 
                                                            ; 35: SOFTWARE3
  171 000000D0         
  172 000000D0         __Vectors_End
  173 000000D0         
  174 000000D0 000000D0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  175 000000D0         
  176 000000D0                 ELSE                         ; AM_CMSIS_REGS



ARM Macro Assembler    Page 7 


  239                          ENDIF                        ; AM_CMSIS_REGS
  240 000000D0         
  241 000000D0         ;*******************************************************
                       ***********************
  242 000000D0         ;
  243 000000D0         ; Place code immediately following vector table.
  244 000000D0         ;
  245 000000D0         ;*******************************************************
                       ***********************
  246 000000D0         ;*******************************************************
                       ***********************
  247 000000D0         ;
  248 000000D0         ; The Patch table.
  249 000000D0         ;
  250 000000D0         ;*******************************************************
                       ***********************
  251 000000D0                 EXPORT           __Patchable
  252 000000D0         __Patchable
  253 000000D0 00000000        DCD              0
  254 000000D4 00000000        DCD              0
  255 000000D8 00000000        DCD              0
  256 000000DC 00000000        DCD              0
  257 000000E0 00000000        DCD              0
  258 000000E4 00000000        DCD              0
  259 000000E8 00000000        DCD              0
  260 000000EC 00000000        DCD              0
  261 000000F0 00000000        DCD              0
  262 000000F4 00000000        DCD              0
  263 000000F8 00000000        DCD              0
  264 000000FC 00000000        DCD              0
  265 00000100         
  266 00000100         ;*******************************************************
                       ***********************
  267 00000100         ;
  268 00000100         ; This is the code that gets called when the processor f
                       irst starts execution
  269 00000100         ; following a reset event.
  270 00000100         ;
  271 00000100         ;*******************************************************
                       ***********************
  272 00000100         Reset_Handler
                               PROC
  273 00000100                 EXPORT           Reset_Handler               [WE
AK]
  274 00000100                 IMPORT           __main
  275 00000100         
  276 00000100         ; Enable the FPU.
  277 00000100 F64E 5088       MOVW             R0, #0xED88
  278 00000104 F2CE 0000       MOVT             R0, #0xE000
  279 00000108 6801            LDR              R1, [R0]
  280 0000010A F441 0170       ORR              R1, #0x00F00000
  281 0000010E 6001            STR              R1, [R0]
  282 00000110 F3BF 8F4F       DSB
  283 00000114 F3BF 8F6F       ISB
  284 00000118         
  285 00000118         ; Branch to main.
  286 00000118 4806            LDR              R0, =__main
  287 0000011A 4700            BX               R0
  288 0000011C         



ARM Macro Assembler    Page 8 


  289 0000011C                 ENDP
  290 0000011C         
  291 0000011C         ;*******************************************************
                       ***********************
  292 0000011C         ;
  293 0000011C         ; Weak Exception Handlers.
  294 0000011C         ;
  295 0000011C         ;*******************************************************
                       ***********************
  296 0000011C                 IF               AM_CMSIS_REGS == 1
  297 0000011C         
  299 0000011C         HardFault_Handler
                               PROC
  300 0000011C                 EXPORT           HardFault_Handler           [WE
AK]
  301 0000011C E7FE            B                .
  302 0000011E                 ENDP
  303 0000011E         NMI_Handler
                               PROC
  304 0000011E                 EXPORT           NMI_Handler                 [WE
AK]
  305 0000011E E7FE            B                .
  306 00000120                 ENDP
  308 00000120         MemManage_Handler
                               PROC
  309 00000120                 EXPORT           MemManage_Handler           [WE
AK]
  310 00000120 E7FE            B                .
  311 00000122                 ENDP
  313 00000122         BusFault_Handler
                               PROC
  314 00000122                 EXPORT           BusFault_Handler            [WE
AK]
  315 00000122 E7FE            B                .
  316 00000124                 ENDP
  318 00000124         UsageFault_Handler
                               PROC
  319 00000124                 EXPORT           UsageFault_Handler          [WE
AK]
  320 00000124 E7FE            B                .
  321 00000126                 ENDP
  323 00000126         SecureFault_Handler
                               PROC
  324 00000126                 EXPORT           SecureFault_Handler         [WE
AK]
  325 00000126 E7FE            B                .
  326 00000128                 ENDP
  327 00000128         SVC_Handler
                               PROC
  328 00000128                 EXPORT           SVC_Handler                 [WE
AK]
  329 00000128 E7FE            B                .
  330 0000012A                 ENDP
  331 0000012A         DebugMon_Handler
                               PROC
  332 0000012A                 EXPORT           DebugMon_Handler            [WE
AK]
  333 0000012A E7FE            B                .
  334 0000012C                 ENDP



ARM Macro Assembler    Page 9 


  335 0000012C         PendSV_Handler
                               PROC
  336 0000012C                 EXPORT           PendSV_Handler              [WE
AK]
  337 0000012C E7FE            B                .
  338 0000012E                 ENDP
  339 0000012E         SysTick_Handler
                               PROC
  340 0000012E                 EXPORT           SysTick_Handler             [WE
AK]
  341 0000012E E7FE            B                .
  342 00000130                 ENDP
  343 00000130         
  345 00000130         am_default_isr
                               PROC
  346 00000130                 EXPORT           am_brownout_isr             [WE
AK]
  347 00000130                 EXPORT           am_watchdog_isr             [WE
AK]
  348 00000130                 EXPORT           am_rtc_isr                  [WE
AK]
  349 00000130                 EXPORT           am_vcomp_isr                [WE
AK]
  350 00000130                 EXPORT           am_ioslave_ios_isr          [WE
AK]
  351 00000130                 EXPORT           am_ioslave_acc_isr          [WE
AK]
  352 00000130                 EXPORT           am_iomaster0_isr            [WE
AK]
  353 00000130                 EXPORT           am_iomaster1_isr            [WE
AK]
  354 00000130                 EXPORT           am_iomaster2_isr            [WE
AK]
  355 00000130                 EXPORT           am_iomaster3_isr            [WE
AK]
  356 00000130                 EXPORT           am_iomaster4_isr            [WE
AK]
  357 00000130                 EXPORT           am_iomaster5_isr            [WE
AK]
  358 00000130                 EXPORT           am_ble_isr                  [WE
AK]
  359 00000130                 EXPORT           am_gpio_isr                 [WE
AK]
  360 00000130                 EXPORT           am_ctimer_isr               [WE
AK]
  361 00000130                 EXPORT           am_uart_isr                 [WE
AK]
  362 00000130                 EXPORT           am_uart0_isr                [WE
AK]
  363 00000130                 EXPORT           am_uart1_isr                [WE
AK]
  364 00000130                 EXPORT           am_scard_isr                [WE
AK]
  365 00000130                 EXPORT           am_adc_isr                  [WE
AK]
  366 00000130                 EXPORT           am_pdm_isr                  [WE
AK]
  367 00000130                 EXPORT           am_mspi_isr                 [WE
AK]



ARM Macro Assembler    Page 10 


  368 00000130                 EXPORT           am_stimer_isr               [WE
AK]
  369 00000130                 EXPORT           am_stimer_cmpr0_isr         [WE
AK]
  370 00000130                 EXPORT           am_stimer_cmpr1_isr         [WE
AK]
  371 00000130                 EXPORT           am_stimer_cmpr2_isr         [WE
AK]
  372 00000130                 EXPORT           am_stimer_cmpr3_isr         [WE
AK]
  373 00000130                 EXPORT           am_stimer_cmpr4_isr         [WE
AK]
  374 00000130                 EXPORT           am_stimer_cmpr5_isr         [WE
AK]
  375 00000130                 EXPORT           am_stimer_cmpr6_isr         [WE
AK]
  376 00000130                 EXPORT           am_stimer_cmpr7_isr         [WE
AK]
  377 00000130                 EXPORT           am_clkgen_isr               [WE
AK]
  378 00000130                 EXPORT           am_software0_isr            [WE
AK]
  379 00000130                 EXPORT           am_software1_isr            [WE
AK]
  380 00000130                 EXPORT           am_software2_isr            [WE
AK]
  381 00000130                 EXPORT           am_software3_isr            [WE
AK]
  382 00000130         
  383 00000130         am_brownout_isr
  384 00000130         am_watchdog_isr
  385 00000130         am_rtc_isr
  386 00000130         am_vcomp_isr
  387 00000130         am_ioslave_ios_isr
  388 00000130         am_ioslave_acc_isr
  389 00000130         am_iomaster0_isr
  390 00000130         am_iomaster1_isr
  391 00000130         am_iomaster2_isr
  392 00000130         am_iomaster3_isr
  393 00000130         am_iomaster4_isr
  394 00000130         am_iomaster5_isr
  395 00000130         am_ble_isr
  396 00000130         am_gpio_isr
  397 00000130         am_ctimer_isr
  398 00000130         am_uart_isr
  399 00000130         am_uart0_isr
  400 00000130         am_uart1_isr
  401 00000130         am_scard_isr
  402 00000130         am_adc_isr
  403 00000130         am_pdm_isr
  404 00000130         am_mspi_isr
  405 00000130         am_stimer_isr
  406 00000130         am_stimer_cmpr0_isr
  407 00000130         am_stimer_cmpr1_isr
  408 00000130         am_stimer_cmpr2_isr
  409 00000130         am_stimer_cmpr3_isr
  410 00000130         am_stimer_cmpr4_isr
  411 00000130         am_stimer_cmpr5_isr
  412 00000130         am_stimer_cmpr6_isr



ARM Macro Assembler    Page 11 


  413 00000130         am_stimer_cmpr7_isr
  414 00000130         am_clkgen_isr
  415 00000130         am_software0_isr
  416 00000130         am_software1_isr
  417 00000130         am_software2_isr
  418 00000130         am_software3_isr
  419 00000130         
  420 00000130                 ELSE                         ; AM_CMSIS_REGS
  521                          ENDIF                        ; AM_CMSIS_REGS
  522 00000130         
  523 00000130         ; all device interrupts go here unless the weak label is
                        over
  524 00000130         ; ridden in the linker hard spin so the debugger will kn
                       ow it
  525 00000130         ; was an unhandled interrupt request a come-from-buffer 
                       or
  526 00000130         ; instruction trace hardware would sure be nice if you g
                       et here
  527 00000130 E7FE            B                .
  528 00000132         
  529 00000132         
  530 00000132                 ENDP
  531 00000132         
  532 00000132         ;*******************************************************
                       ***********************
  533 00000132         ;
  534 00000132         ; Align the end of the section.
  535 00000132         ;
  536 00000132         ;*******************************************************
                       ***********************
  537 00000132 00 00           ALIGN
  538 00000134         
  539 00000134         ;*******************************************************
                       ***********************
  540 00000134         ;
  541 00000134         ; Initialization of the heap and stack.
  542 00000134         ;
  543 00000134         ;*******************************************************
                       ***********************
  544 00000134 00000000        AREA             |.text|, CODE, READONLY
  545 00000000         
  546 00000000         ;*******************************************************
                       ***********************
  547 00000000         ;
  548 00000000         ; User Initial Stack & Heap.
  549 00000000         ;
  550 00000000         ;*******************************************************
                       ***********************
  551 00000000                 IF               :DEF: __MICROLIB
  552 00000000                 EXPORT           __initial_sp
  553 00000000                 EXPORT           __heap_base
  554 00000000                 EXPORT           __heap_limit
  555 00000000                 ELSE
  567                          ENDIF
  568 00000000         
  569 00000000         ;*******************************************************
                       ***********************
  570 00000000         ;
  571 00000000         ; Align the end of the section.



ARM Macro Assembler    Page 12 


  572 00000000         ;
  573 00000000         ;*******************************************************
                       ***********************
  574 00000000                 ALIGN
  575 00000000         
  576 00000000         ;*******************************************************
                       ***********************
  577 00000000         ;
  578 00000000         ; All Done
  579 00000000         ;
  580 00000000         ;*******************************************************
                       ***********************
  581 00000000                 END
Command Line: --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=interwork -
-depend=.\objects\startup_apollo.d -o.\objects\startup_apollo.o -I.\RTE\_H002_B
LE_Core -IC:\Keil_v5\ARM\PACK\AmbiqMicro\Apollo_DFP\1.1.0\Device\Include -IC:\K
eil_v5\ARM\CMSIS\Include --predefine="__MICROLIB SETA 1" --predefine="__UVISION
_VERSION SETA 525" --predefine="APOLLO2_1024 SETA 1" --list=.\listings\startup_
apollo.lst ..\Platform\PlatformStartup\startup_Apollo.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 71 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      None
Comment: STACK unused
StackMem 00000000

Symbol: StackMem
   Definitions
      At line 72 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 115 in file ..\Platform\PlatformStartup\startup_Apollo.s
Comment: StackMem used once
__initial_sp 00003000

Symbol: __initial_sp
   Definitions
      At line 74 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 552 in file ..\Platform\PlatformStartup\startup_Apollo.s
Comment: __initial_sp used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 81 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      None
Comment: HEAP unused
HeapMem 00000000

Symbol: HeapMem
   Definitions
      At line 83 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      None
Comment: HeapMem unused
__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 82 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 553 in file ..\Platform\PlatformStartup\startup_Apollo.s
Comment: __heap_base used once
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 85 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 554 in file ..\Platform\PlatformStartup\startup_Apollo.s
Comment: __heap_limit used once
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BusFault_Handler 00000122

Symbol: BusFault_Handler
   Definitions
      At line 313 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 120 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 314 in file ..\Platform\PlatformStartup\startup_Apollo.s

DebugMon_Handler 0000012A

Symbol: DebugMon_Handler
   Definitions
      At line 331 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 127 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 332 in file ..\Platform\PlatformStartup\startup_Apollo.s

HardFault_Handler 0000011C

Symbol: HardFault_Handler
   Definitions
      At line 299 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 118 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 300 in file ..\Platform\PlatformStartup\startup_Apollo.s

MemManage_Handler 00000120

Symbol: MemManage_Handler
   Definitions
      At line 308 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 119 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 309 in file ..\Platform\PlatformStartup\startup_Apollo.s

NMI_Handler 0000011E

Symbol: NMI_Handler
   Definitions
      At line 303 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 117 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 304 in file ..\Platform\PlatformStartup\startup_Apollo.s

PendSV_Handler 0000012C

Symbol: PendSV_Handler
   Definitions
      At line 335 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 129 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 336 in file ..\Platform\PlatformStartup\startup_Apollo.s

RESET 00000000

Symbol: RESET
   Definitions
      At line 99 in file ..\Platform\PlatformStartup\startup_Apollo.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Uses
      None
Comment: RESET unused
Reset_Handler 00000100

Symbol: Reset_Handler
   Definitions
      At line 272 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 116 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 273 in file ..\Platform\PlatformStartup\startup_Apollo.s

SVC_Handler 00000128

Symbol: SVC_Handler
   Definitions
      At line 327 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 126 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 328 in file ..\Platform\PlatformStartup\startup_Apollo.s

SecureFault_Handler 00000126

Symbol: SecureFault_Handler
   Definitions
      At line 323 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 122 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 324 in file ..\Platform\PlatformStartup\startup_Apollo.s

SysTick_Handler 0000012E

Symbol: SysTick_Handler
   Definitions
      At line 339 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 130 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 340 in file ..\Platform\PlatformStartup\startup_Apollo.s

UsageFault_Handler 00000124

Symbol: UsageFault_Handler
   Definitions
      At line 318 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 121 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 319 in file ..\Platform\PlatformStartup\startup_Apollo.s

__Patchable 000000D0

Symbol: __Patchable
   Definitions
      At line 252 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 251 in file ..\Platform\PlatformStartup\startup_Apollo.s
Comment: __Patchable used once
__Vectors 00000000

Symbol: __Vectors



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 114 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 113 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 174 in file ..\Platform\PlatformStartup\startup_Apollo.s

__Vectors_End 000000D0

Symbol: __Vectors_End
   Definitions
      At line 172 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 174 in file ..\Platform\PlatformStartup\startup_Apollo.s
Comment: __Vectors_End used once
am_adc_isr 00000130

Symbol: am_adc_isr
   Definitions
      At line 402 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 153 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 365 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_ble_isr 00000130

Symbol: am_ble_isr
   Definitions
      At line 395 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 147 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 358 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_brownout_isr 00000130

Symbol: am_brownout_isr
   Definitions
      At line 383 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 135 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 346 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_clkgen_isr 00000130

Symbol: am_clkgen_isr
   Definitions
      At line 414 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 166 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 377 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_ctimer_isr 00000130

Symbol: am_ctimer_isr
   Definitions
      At line 397 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 149 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 360 in file ..\Platform\PlatformStartup\startup_Apollo.s




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

am_default_isr 00000130

Symbol: am_default_isr
   Definitions
      At line 345 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 156 in file ..\Platform\PlatformStartup\startup_Apollo.s
Comment: am_default_isr used once
am_gpio_isr 00000130

Symbol: am_gpio_isr
   Definitions
      At line 396 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 148 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 359 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_iomaster0_isr 00000130

Symbol: am_iomaster0_isr
   Definitions
      At line 389 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 141 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 352 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_iomaster1_isr 00000130

Symbol: am_iomaster1_isr
   Definitions
      At line 390 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 142 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 353 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_iomaster2_isr 00000130

Symbol: am_iomaster2_isr
   Definitions
      At line 391 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 143 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 354 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_iomaster3_isr 00000130

Symbol: am_iomaster3_isr
   Definitions
      At line 392 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 144 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 355 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_iomaster4_isr 00000130

Symbol: am_iomaster4_isr
   Definitions
      At line 393 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 145 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 356 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_iomaster5_isr 00000130

Symbol: am_iomaster5_isr
   Definitions
      At line 394 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 146 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 357 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_ioslave_acc_isr 00000130

Symbol: am_ioslave_acc_isr
   Definitions
      At line 388 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 140 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 351 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_ioslave_ios_isr 00000130

Symbol: am_ioslave_ios_isr
   Definitions
      At line 387 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 139 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 350 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_mspi_isr 00000130

Symbol: am_mspi_isr
   Definitions
      At line 404 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 155 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 367 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_pdm_isr 00000130

Symbol: am_pdm_isr
   Definitions
      At line 403 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 154 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 366 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_rtc_isr 00000130

Symbol: am_rtc_isr
   Definitions
      At line 385 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 137 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 348 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_scard_isr 00000130




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

Symbol: am_scard_isr
   Definitions
      At line 401 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 152 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 364 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_software0_isr 00000130

Symbol: am_software0_isr
   Definitions
      At line 415 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 167 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 378 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_software1_isr 00000130

Symbol: am_software1_isr
   Definitions
      At line 416 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 168 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 379 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_software2_isr 00000130

Symbol: am_software2_isr
   Definitions
      At line 417 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 169 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 380 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_software3_isr 00000130

Symbol: am_software3_isr
   Definitions
      At line 418 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 170 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 381 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_stimer_cmpr0_isr 00000130

Symbol: am_stimer_cmpr0_isr
   Definitions
      At line 406 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 158 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 369 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_stimer_cmpr1_isr 00000130

Symbol: am_stimer_cmpr1_isr
   Definitions
      At line 407 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 159 in file ..\Platform\PlatformStartup\startup_Apollo.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

      At line 370 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_stimer_cmpr2_isr 00000130

Symbol: am_stimer_cmpr2_isr
   Definitions
      At line 408 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 160 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 371 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_stimer_cmpr3_isr 00000130

Symbol: am_stimer_cmpr3_isr
   Definitions
      At line 409 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 161 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 372 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_stimer_cmpr4_isr 00000130

Symbol: am_stimer_cmpr4_isr
   Definitions
      At line 410 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 162 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 373 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_stimer_cmpr5_isr 00000130

Symbol: am_stimer_cmpr5_isr
   Definitions
      At line 411 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 163 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 374 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_stimer_cmpr6_isr 00000130

Symbol: am_stimer_cmpr6_isr
   Definitions
      At line 412 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 164 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 375 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_stimer_cmpr7_isr 00000130

Symbol: am_stimer_cmpr7_isr
   Definitions
      At line 413 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 165 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 376 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_stimer_isr 00000130

Symbol: am_stimer_isr



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 405 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 157 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 368 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_uart0_isr 00000130

Symbol: am_uart0_isr
   Definitions
      At line 399 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 362 in file ..\Platform\PlatformStartup\startup_Apollo.s
Comment: am_uart0_isr used once
am_uart1_isr 00000130

Symbol: am_uart1_isr
   Definitions
      At line 400 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 151 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 363 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_uart_isr 00000130

Symbol: am_uart_isr
   Definitions
      At line 398 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 150 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 361 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_vcomp_isr 00000130

Symbol: am_vcomp_isr
   Definitions
      At line 386 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 138 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 349 in file ..\Platform\PlatformStartup\startup_Apollo.s

am_watchdog_isr 00000130

Symbol: am_watchdog_isr
   Definitions
      At line 384 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 136 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 347 in file ..\Platform\PlatformStartup\startup_Apollo.s

52 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 544 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      None
Comment: .text unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

AM_CMSIS_REGS 00000001

Symbol: AM_CMSIS_REGS
   Definitions
      At line 58 in file ..\Platform\PlatformStartup\..\PlatformSource\mcu\am_m
cu_cmsis.s
   Uses
      At line 112 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 296 in file ..\Platform\PlatformStartup\startup_Apollo.s

Heap 00000000

Symbol: Heap
   Definitions
      At line 64 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 84 in file ..\Platform\PlatformStartup\startup_Apollo.s
Comment: Heap used once
Stack 00003000

Symbol: Stack
   Definitions
      At line 57 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 73 in file ..\Platform\PlatformStartup\startup_Apollo.s
      At line 115 in file ..\Platform\PlatformStartup\startup_Apollo.s

__Vectors_Size 000000D0

Symbol: __Vectors_Size
   Definitions
      At line 174 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      None
Comment: __Vectors_Size unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__main 00000000

Symbol: __main
   Definitions
      At line 274 in file ..\Platform\PlatformStartup\startup_Apollo.s
   Uses
      At line 286 in file ..\Platform\PlatformStartup\startup_Apollo.s
Comment: __main used once
1 symbol
401 symbols in table
